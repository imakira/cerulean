shadow$provide.module$node_modules$ieee754$index = function(global, require, module, exports) {
  exports.read = function(buffer, offset, isLE, mLen, nBytes) {
    var m = nBytes * 8 - mLen - 1;
    var eMax = (1 << m) - 1, eBias = eMax >> 1, nBits = -7;
    nBytes = isLE ? nBytes - 1 : 0;
    var d = isLE ? -1 : 1, s = buffer[offset + nBytes];
    nBytes += d;
    isLE = s & (1 << -nBits) - 1;
    s >>= -nBits;
    for (nBits += m; nBits > 0; isLE = isLE * 256 + buffer[offset + nBytes], nBytes += d, nBits -= 8) {
    }
    m = isLE & (1 << -nBits) - 1;
    isLE >>= -nBits;
    for (nBits += mLen; nBits > 0; m = m * 256 + buffer[offset + nBytes], nBytes += d, nBits -= 8) {
    }
    if (isLE === 0) {
      isLE = 1 - eBias;
    } else {
      if (isLE === eMax) {
        return m ? NaN : (s ? -1 : 1) * Infinity;
      }
      m += Math.pow(2, mLen);
      isLE -= eBias;
    }
    return (s ? -1 : 1) * m * Math.pow(2, isLE - mLen);
  };
  exports.write = function(buffer, value, offset, isLE, mLen, nBytes) {
    var c, eLen = nBytes * 8 - mLen - 1, eMax = (1 << eLen) - 1, eBias = eMax >> 1, rt = mLen === 23 ? 5.960464477539062E-8 : 0;
    nBytes = isLE ? 0 : nBytes - 1;
    var d = isLE ? 1 : -1, s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;
    value = Math.abs(value);
    isNaN(value) || value === Infinity ? (value = isNaN(value) ? 1 : 0, isLE = eMax) : (isLE = Math.floor(Math.log(value) / Math.LN2), value * (c = Math.pow(2, -isLE)) < 1 && (isLE--, c *= 2), value = isLE + eBias >= 1 ? value + rt / c : value + rt * Math.pow(2, 1 - eBias), value * c >= 2 && (isLE++, c /= 2), isLE + eBias >= eMax ? (value = 0, isLE = eMax) : isLE + eBias >= 1 ? (value = (value * c - 1) * Math.pow(2, mLen), isLE += eBias) : (value = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen), 
    isLE = 0));
    for (; mLen >= 8; buffer[offset + nBytes] = value & 255, nBytes += d, value /= 256, mLen -= 8) {
    }
    isLE = isLE << mLen | value;
    for (eLen += mLen; eLen > 0; buffer[offset + nBytes] = isLE & 255, nBytes += d, isLE /= 256, eLen -= 8) {
    }
    buffer[offset + nBytes - d] |= s * 128;
  };
};

//# sourceMappingURL=module$node_modules$ieee754$index.js.map
